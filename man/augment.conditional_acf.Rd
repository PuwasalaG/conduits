% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/augment.R
\name{augment.conditional_acf}
\alias{augment.conditional_acf}
\title{Augment data with information from a conditional auto-correlation fit}
\usage{
\method{augment}{conditional_acf}(x, ...)
}
\arguments{
\item{x}{Model object of class "conditional_acf" returned from
\code{\link[conduits]{conditional_acf}} with information to append to observations.}

\item{...}{Addition arguments to augment method.}
}
\value{
A \code{\link[tibble]{tibble}} with information
about data points.
}
\description{
This function produces estimated conditional autocorrelation between
$x_t$ and $y_t$ at lag $k$, i.e. $r_k = E(x_ty_{t+k}|z_t)$.
}
\examples{


old_ts <- NEON_PRIN_5min_cleaned \%>\%
  dplyr::select(
    Timestamp, site, turbidity, level,
    conductance, temperature
  ) \%>\%
  tidyr::pivot_wider(
    names_from = site,
    values_from = turbidity:temperature
  )

fit_mean <- old_ts \%>\%
  conditional_mean(turbidity_downstream ~
  s(level_upstream, k = 8) +
    s(conductance_upstream, k = 8) +
    s(temperature_upstream, k = 8))

fit_var <- old_ts \%>\%
  conditional_var(
    turbidity_downstream ~
    s(level_upstream, k = 7) +
      s(conductance_upstream, k = 7) +
      s(temperature_upstream, k = 7),
    family = "Gamma",
    fit_mean
  )


fit_c_acf <- old_ts \%>\%
  tidyr::drop_na() \%>\%
  conditional_acf(
    turbidity_upstream ~ splines::ns(level_upstream, df = 5) +
      splines::ns(conductance_upstream, df = 5),
    lag_max = 10, fit_mean, fit_var,
    df_correlation = c(5, 5)
  )

data_inf <- fit_c_acf \%>\% augment()
}
